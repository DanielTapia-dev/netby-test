trigger: none
pr: none

pool:
  vmImage: ubuntu-latest

variables:
- group: "azure-netby-secrets"
- name: IMAGE_NAME
  value: '$(AZ_ACR_NAME).azurecr.io/demo-spring'
- name: IMAGE_TAG
  value: '$(Build.BuildId)'

stages:
- stage: deploy
  displayName: Build → Push → ACI
  jobs:
  - job: run
    displayName: Deploy
    steps:
    - script: |
        set -euo pipefail

        # Build del JAR
        ./mvnw -q -DskipTests clean package || mvn -q -DskipTests clean package

        # Login Azure (SPN)
        az login --service-principal \
          -u "$AZURE_CLIENT_ID" \
          -p "$AZURE_CLIENT_SECRET" \
          --tenant "$AZURE_TENANT_ID"
        az account set --subscription "$AZURE_SUBSCRIPTION_ID"

        az provider register --namespace Microsoft.ContainerInstance
        az provider register --namespace Microsoft.Network

        az acr login -n "$AZ_ACR_NAME"
        docker build -t "$IMAGE_NAME:$IMAGE_TAG" .
        docker push  "$IMAGE_NAME:$IMAGE_TAG"
        docker tag   "$IMAGE_NAME:$IMAGE_TAG" "$IMAGE_NAME:latest"
        docker push  "$IMAGE_NAME:latest"

        NEW_IMAGE="$IMAGE_NAME:$IMAGE_TAG"
        if ! az container show -g "$AZ_RESOURCE_GROUP" -n "$AZ_ACI_NAME" >/dev/null 2>&1; then
          az container create \
            -g "$AZ_RESOURCE_GROUP" \
            -n "$AZ_ACI_NAME" \
            -l "$AZ_ACI_LOCATION" \
            --image "$NEW_IMAGE" \
            --registry-login-server "$AZ_ACR_NAME.azurecr.io" \
            ${ACR_USERNAME:+--registry-username "${ACR_USERNAME}"} \
            ${ACR_PASSWORD:+--registry-password "${ACR_PASSWORD}"} \
            --ip-address Public \
            --dns-name-label "$AZ_ACI_DNS_LABEL" \
            --ports "$APP_PORT" \
            --cpu 1 \
            --memory 1.5 \
            --restart-policy Always
        else
          az container update \
            -g "$AZ_RESOURCE_GROUP" \
            -n "$AZ_ACI_NAME" \
            --image "$NEW_IMAGE"
        fi

        FQDN=$(az container show -g "$AZ_RESOURCE_GROUP" -n "$AZ_ACI_NAME" --query "ipAddress.fqdn" -o tsv)
        echo "Deploy listo: http://$FQDN:$APP_PORT"
      displayName: Build & Deploy
      env:
        AZURE_CLIENT_ID: $(AZURE_CLIENT_ID)
        AZURE_CLIENT_SECRET: $(AZURE_CLIENT_SECRET)
        AZURE_TENANT_ID: $(AZURE_TENANT_ID)
        AZURE_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID)
        AZ_ACR_NAME: $(AZ_ACR_NAME)
        AZ_RESOURCE_GROUP: $(AZ_RESOURCE_GROUP)
        AZ_ACI_NAME: $(AZ_ACI_NAME)
        AZ_ACI_LOCATION: $(AZ_ACI_LOCATION)
        AZ_ACI_DNS_LABEL: $(AZ_ACI_DNS_LABEL)
        APP_PORT: $(APP_PORT)
        IMAGE_NAME: $(IMAGE_NAME)
        IMAGE_TAG: $(IMAGE_TAG)
        ACR_USERNAME: $(ACR_USERNAME)
        ACR_PASSWORD: $(ACR_PASSWORD)
